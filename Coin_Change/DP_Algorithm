    DPChange(money, Coins)
     MinNumCoins(0) ← 0
     for m ← 1 to money
        MinNumCoins(m) ← ∞
            for i ← 1 to |Coins|
                if m ≥ coini
                    if MinNumCoins(m - coini) + 1 < MinNumCoins(m)
                        MinNumCoins(m) ← MinNumCoins(m - coini) + 1
    output MinNumCoins(money)


runtime O(money*Coins)


//mods of DPChange.

If money = 10^9, DPChange requires a huge array of size 10^9. Modify the DPChange algorithm so that the array size required does not exceed the value of the largest coin denomination.
Recall that our original goal was to make change, not just compute MinNumCoins(money). Modify DPChange so that it not only computes the minimum number of coins but also returns these coins.
